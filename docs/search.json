[
  {
    "objectID": "da-21.html",
    "href": "da-21.html",
    "title": "Daily Assignment 21",
    "section": "",
    "text": "library(dataRetrieval)\n\nWarning: package 'dataRetrieval' was built under R version 4.4.3\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.7     ✔ recipes      1.1.1\n✔ dials        1.3.0     ✔ rsample      1.2.1\n✔ dplyr        1.1.4     ✔ tibble       3.2.1\n✔ ggplot2      3.5.1     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ parsnip      1.2.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.2     ✔ yardstick    1.3.1\n\n\nWarning: package 'recipes' was built under R version 4.4.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(dplyr)\nlibrary(tsibble)\n\nWarning: package 'tsibble' was built under R version 4.4.3\n\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\n\n\nAttaching package: 'tsibble'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\n\n\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",  \n                          parameterCd = \"00060\",    \n                          startDate = \"2013-01-01\",   \n                          endDate = \"2023-12-31\") %&gt;% \n  renameNWISColumns() %&gt;%                             \n  mutate(Date = yearmonth(Date)) %&gt;%                  \n  group_by(Date)%&gt;%\n  \n  #1: Converting to tsibble\n  summarise(Flow = mean(Flow, na.rm = TRUE)) %&gt;% \n  as_tsibble(index = Date)\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\n\n\n#2: Plotting time series data\n\nlibrary(ggplot2)\n\nggplot(poudre_flow, aes(x = Date, y = Flow)) +\n  geom_line(color = \"steelblue\") +\n  labs(title = \"Monthly Mean Flow at Site 06752260\",\n       x = \"Date\",\n       y = \"Flow (cfs)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n# Animate with plotly \n\nlibrary(plotly)\n\nWarning: package 'plotly' was built under R version 4.4.3\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nggplot_obj &lt;- ggplot(poudre_flow, aes(x = Date, y = Flow)) +\n  geom_line(color = \"steelblue\") +\n  labs(title = \"Monthly Mean Flow at Site 06752260\",\n       x = \"Date\",\n       y = \"Flow (cfs)\") +\n  theme_minimal()\n\nggplotly(ggplot_obj)\n\n\n\n\n\n\n#3: Subseries \nlibrary(feasts)\n\nWarning: package 'feasts' was built under R version 4.4.3\n\n\nLoading required package: fabletools\n\n\nWarning: package 'fabletools' was built under R version 4.4.3\n\n\n\nAttaching package: 'fabletools'\n\n\nThe following object is masked from 'package:yardstick':\n\n    accuracy\n\n\nThe following object is masked from 'package:parsnip':\n\n    null_model\n\n\nThe following objects are masked from 'package:infer':\n\n    generate, hypothesize\n\nlibrary(fabletools)\nlibrary(ggplot2)\n\ngg_season(poudre_flow, Flow) +\n  labs(title = \"Seasonal Plot of Streamflow\",\n       y = \"Flow (cfs)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# In this plot, seasons are defined by the calendar months, assuming monthly seasonablity. Subseries are time series broken down by season, in this case, one for each month. The data shows a sharp increase in streamflow from April to July, likely because of increased temperatures resulting in more snowmelt and runoff. Rainfall is also typically higher during these months. In 2014, there is outlying data from August to October with a sharp increase in streamflow. \n\n\n#4: Decompose \n\npoudre_flow_stl &lt;- poudre_flow %&gt;%\n  model(stl = STL(Flow ~ trend(window = 13) + season(window = \"periodic\")))\n\ncomponents(poudre_flow_stl) %&gt;%\n  autoplot() +\n  labs(title = \"STL Decomposition of Monthly Streamflow\")\n\n\n\n\n\n\n\n# The data is showing strong seasonal peak each year during the spring and early summer likely because of snow melt and resulting runoff. There are lows in the late summer and winter. This shows a seasonal pattern, repeating every 12 months. This also shows long-term changes in streamflow. The streamflow remains fairly consistent with slight decreases in streamflow over the years. This slight change could be a result of humans consuming water resources faster than they can be replaced, reducing overall streamflow."
  },
  {
    "objectID": "da-22.html",
    "href": "da-22.html",
    "title": "Daily Assignment 22",
    "section": "",
    "text": "library(dataRetrieval)\n\nWarning: package 'dataRetrieval' was built under R version 4.4.3\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n\n\n✔ broom        1.0.7     ✔ recipes      1.1.1\n✔ dials        1.3.0     ✔ rsample      1.2.1\n✔ dplyr        1.1.4     ✔ tibble       3.2.1\n✔ ggplot2      3.5.1     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.2.1\n✔ modeldata    1.4.0     ✔ workflows    1.1.4\n✔ parsnip      1.2.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.2     ✔ yardstick    1.3.1\n\n\nWarning: package 'recipes' was built under R version 4.4.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ lubridate 1.9.4     ✔ stringr   1.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ readr::col_factor() masks scales::col_factor()\n✖ purrr::discard()    masks scales::discard()\n✖ dplyr::filter()     masks stats::filter()\n✖ stringr::fixed()    masks recipes::fixed()\n✖ dplyr::lag()        masks stats::lag()\n✖ readr::spec()       masks yardstick::spec()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tibbletime)\n\nWarning: package 'tibbletime' was built under R version 4.4.3\n\n\n\nAttaching package: 'tibbletime'\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(modeltime)\n\nWarning: package 'modeltime' was built under R version 4.4.3\n\nlibrary(yardstick)\nlibrary(dplyr)\nlibrary(tsibble)\n\nWarning: package 'tsibble' was built under R version 4.4.3\n\n\nRegistered S3 method overwritten by 'tsibble':\n  method               from \n  as_tibble.grouped_df dplyr\n\nAttaching package: 'tsibble'\n\nThe following object is masked from 'package:lubridate':\n\n    interval\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, union\n\nlibrary(lubridate)\nlibrary(timetk)\n\nWarning: package 'timetk' was built under R version 4.4.3\n\n\n\nData prep\n\npoudre_flow &lt;- readNWISdv(siteNumber = \"06752260\",  \n                          parameterCd = \"00060\",    \n                          startDate = \"2013-01-01\",   \n                          endDate = \"2023-12-31\") %&gt;% \n  renameNWISColumns() %&gt;%\n  mutate(Date = as.Date(Date)) %&gt;%\n  mutate(month = floor_date(Date, \"month\")) %&gt;%\n  group_by(Date) %&gt;%\n  summarise(Flow = mean(Flow, na.rm = TRUE)) %&gt;%\n  ungroup()\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2013-01-01&endDT=2023-12-31\n\n# Data split\nsplits &lt;- initial_time_split(poudre_flow)\n\n\n\nCreate and fit model\n\n# ARIMA model\nmodel_arima &lt;- arima_reg() %&gt;%\n  set_engine(\"auto_arima\") %&gt;%\n  fit(Flow ~ Date, data = training(splits))\n\nfrequency = 7 observations per 1 week\n\n# Prophet model\nmodel_prophet &lt;- prophet_reg(seasonality_yearly = TRUE) %&gt;%\n  set_engine(\"prophet\") %&gt;%\n  fit(Flow ~ Date, data = training(splits))\n\nDisabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this.\n\n# Combine into modeltime table\nmodels_tbl &lt;- modeltime_table(\n  model_arima,\n  model_prophet)\n\n\n\nForecasting\n\n# Create future data frame for 12 months\nfuture_tbl &lt;- poudre_flow %&gt;%\n  future_frame(.date_var = Date, .length_out = \"12 months\")\n\n# Forecast into future\nforecast_tbl &lt;- models_tbl %&gt;%\n  modeltime_forecast(\n    new_data = future_tbl,\n    actual_data = poudre_flow)\n\n# Plot the forecast\nforecast_tbl %&gt;%\n  plot_modeltime_forecast(.interactive = FALSE)\n\nWarning: ✖ Expecting the following names to be in the data frame: .conf_hi, .conf_lo.\nℹ Proceeding with '.conf_interval_show = FALSE' to visualize the forecast without confidence intervals.\nAlternatively, try using `modeltime_calibrate()` before forecasting to add confidence intervals.\n\n\n\n\n\n\n\n\n\n\n# Daily streamflow for 2024\npoudre_2024 &lt;- readNWISdv(siteNumber = \"06752260\",\n                          parameterCd = \"00060\",\n                          startDate = \"2024-01-01\",\n                          endDate = \"2024-12-31\") %&gt;%\n  renameNWISColumns() %&gt;%\n  mutate(Date = as.Date(Date),\n         month = floor_date(Date, \"month\")) %&gt;%\n  group_by(month) %&gt;%\n  summarise(Observed = mean(Flow, na.rm = TRUE)) %&gt;%\n  rename(Date = month)\n\nGET:https://waterservices.usgs.gov/nwis/dv/?site=06752260&format=waterml%2C1.1&ParameterCd=00060&StatCd=00003&startDT=2024-01-01&endDT=2024-12-31\n\n\n\n\nClean forecast table\n\nlibrary(zoo)\n\n\nAttaching package: 'zoo'\n\n\nThe following object is masked from 'package:tsibble':\n\n    index\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(tidyr)\n\nforecast_2024 &lt;- forecast_tbl %&gt;%\n  filter(.key == \"prediction\", .index &gt;= as.Date(\"2024-01-01\") & .index &lt;= as.Date(\"2024-12-31\")) %&gt;%\n  mutate(month = floor_date(.index, \"month\")) %&gt;%\n  group_by(month) %&gt;%\n  summarise(Predicted = mean(.value, na.rm = TRUE)) %&gt;%\n  rename(Date = month)\n\n# Join forecast with observed monthly averages\ncomparison_tbl &lt;- forecast_2024 %&gt;%\n  left_join(poudre_2024, by = \"Date\") %&gt;%\n  drop_na()\n\nprint(comparison_tbl)\n\n# A tibble: 12 × 3\n   Date       Predicted Observed\n   &lt;date&gt;         &lt;dbl&gt;    &lt;dbl&gt;\n 1 2024-01-01     0.823     11.0\n 2 2024-02-01     0.463     24.5\n 3 2024-03-01     1.74      49.6\n 4 2024-04-01    30.8      104. \n 5 2024-05-01   440.       194. \n 6 2024-06-01   485.       383. \n 7 2024-07-01    55.9       87.4\n 8 2024-08-01    28.1       50.7\n 9 2024-09-01    77.6       10.9\n10 2024-10-01     8.62      26.7\n11 2024-11-01    -3.44      43.7\n12 2024-12-01    -1.17      37.2\n\n\n\n\nCompute R-squared\n\n# Step 1: Fit a linear model: Observed ~ Predicted\nr2_model &lt;- lm(Observed ~ Predicted, data = comparison_tbl)\n\n# Step 2: Get summary stats and extract R²\nr2_summary &lt;- summary(r2_model)\nr2_value &lt;- r2_summary$r.squared\n\n# Step 3: Print it\ncat(\"R-squared value:\", round(r2_value, 3), \"\\n\")\n\nR-squared value: 0.822 \n\n# Interpretation: an R-squared value of 0.822 means that approximately 82.2% of the variation of observed streamflow can be explained by the model. The model provides a pretty good fit for the data.  \n\n\n\nGenerate plots\n\nlibrary(ggplot2)\n\nggplot(comparison_tbl, aes(x = Predicted, y = Observed)) +\n  geom_abline(intercept = 0, slope = 1, color = \"gray50\", linetype = \"dashed\", size = 1) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"blue\", fill = \"lightblue\", alpha = 0.3) +\n  geom_point(size = 3, color = \"darkgreen\") +\n  labs(\n    title = \"Predicted vs Observed Monthly Streamflow\",\n    subtitle = \"With 1:1 Line (Gray) and Linear Fit (Blue)\",\n    x = \"Predicted Streamflow (cfs)\",\n    y = \"Observed Streamflow (cfs)\") +\n  theme_minimal() +\n  coord_equal()  \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  }
]